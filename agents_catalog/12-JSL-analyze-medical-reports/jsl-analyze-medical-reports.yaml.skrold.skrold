AWSTemplateFormatVersion: "2010-09-09"
Description: Creates an agent for analyzing medical reports using one or more language models from John Snow Laboratories.
Parameters:
  AgentAliasName:
    Type: String
    Default: "LATEST"
  BedrockModelId:
    Type: String
    Description: The ID of the Foundation Model to use for the Agent
    Default: us.anthropic.claude-3-5-sonnet-20241022-v2:0
  AgentIAMRoleArn:
    Type: String
    Description: The arn for the agent IAM role
  ExtractSocialDeterminantsofHealthModelProductArn:
    Type: String
    Default: "arn:aws:sagemaker:us-west-2:594846645681:model-package/explain-clinical-doc-sdoh-smal-fab58541a660355ebc1955b85ed4925d"
    Description: The arn for the Extract Social Determinants of Health Model
  ICD10CMSentenceEntityResolverModelProductArn:
    Type: String
    Default: "arn:aws:sagemaker:us-west-2:594846645681:model-package/icd10cm-vdb-resolver-5-5-4-2f17a4cf4c9a3d5c9c77b1fe0ed78900"
    Description: The arn for the ICD10CM Sentence Entity Resolver Model

Conditions:
  CreateAgentAliasCondition: !Not [!Equals [!Ref AgentAliasName, ""]]

Resources:
  ####################
  ##### Endpoint #####
  ####################

  ExtractSocialDeterminantsofHealthModelEndpoint:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: "sagemaker-marketplace-endpoint.yaml"
      Parameters:
        EndPointName: "JSL-Extract-Social-Determinants-of-Health"
        ProductARN: !Ref ExtractSocialDeterminantsofHealthModelProductArn
        InstanceType: "ml.m4.xlarge"
        InstanceCount: "1"

  ICD10CMSentenceEntityResolver:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: "sagemaker-marketplace-endpoint.yaml"
      Parameters:
        EndPointName: "ICD-10-CM-Sentence-Entity-Resolver"
        ProductARN: !Ref ICD10CMSentenceEntityResolverModelProductArn
        InstanceType: "ml.m4.xlarge"
        InstanceCount: "1"

  #######################
  ##### ActionGroup #####
  #######################

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: "AccessEndpoint"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: sagemaker:InvokeEndpoint
                Resource:
                  - !GetAtt ExtractSocialDeterminantsofHealthModelEndpoint.Outputs.EndpointArn
                  - !GetAtt ICD10CMSentenceEntityResolver.Outputs.EndpointArn

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.12
      Handler: index.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          ACTION_GROUP: "SearchLambdaActionGroup"
          LOG_LEVEL: "DEBUG"
          ENDPOINT_NAME_1: !GetAtt ExtractSocialDeterminantsofHealthModelEndpoint.Outputs.EndpointName
          ENDPOINT_NAME_2: !GetAtt ICD10CMSentenceEntityResolver.Outputs.EndpointName
      PackageType: Zip
      Code: "action-groups/analyze-medical-reports"

  LambdaAgentPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*

  LambdaAgentAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*

  ###################
  ##### Agent #####
  ###################

  Agent:
    Type: AWS::Bedrock::Agent
    Properties:
      ActionGroups:
        - ActionGroupName: "UserInputAction"
          ParentActionGroupSignature: "AMAZON.UserInput"
          ActionGroupState: "ENABLED"
        - ActionGroupName: AnalyzeMedicalReports
          Description: Analyze medical reports using one or more language models from John Snow Laboratories.
          ActionGroupExecutor:
            Lambda: !GetAtt LambdaFunction.Arn
          ActionGroupState: ENABLED
          FunctionSchema:
            Functions:
              - Name: extract_social_determinants_of_health
                Description: Identify socio-environmental health determinants like access to care, diet, employment, and housing from health records. Tailored for professionals and researchers, this pipeline extracts key factors influencing health in social, economic, and environmental contexts. Process up to 2.8 M chars per hour for real-time and up to 12 M chars per hour for batch mode.
                Parameters:
                  medical_text:
                    Description: "Unstructured medical text"
                    Type: string
                    Required: True
              - Name: extract_icd_10_cm_sentence_entities
                Description: "This model extracts the following entities and maps them to their ICD-10-CM codes using sbiobert_base_cased_mli sentence embeddings. It predicts ICD-10-CM codes up to 3 characters (according to ICD-10-CM code structure the first three characters represent the general type of injury or disease)."
                Parameters:
                  medical_text:
                    Description: "Unstructured medical text"
                    Type: string
                    Required: True
      AgentName: John-Snow-Labs-Analyze-Medical-Reports
      AgentResourceRoleArn: !Ref AgentIAMRoleArn
      AutoPrepare: True
      Description: "Extract adverse drug events from unstructured clinical texts"
      FoundationModel: !Ref BedrockModelId
      GuardrailConfiguration:
        GuardrailIdentifier: !GetAtt JSLAnalyzeMedicalReportsGuardrail.GuardrailId
        GuardrailVersion: !GetAtt JSLAnalyzeMedicalReportsGuardrail.Version
      Instruction: |
        You are a medical text analysis assistant powered by a large language model.
        You help analyze clinical and medical documentation using specialized NLP tools, but you DO NOT provide clinical guidance, diagnosis, treatment recommendations, or interpret medical implications for individual patients.
        Guidelines for Use:
        <guidelines>
          <guideline id="1">Always clarify that you are performing text analysis, not providing medical advice</guideline>
          <guideline id="2">When analyzing clinical text, suggest de-identification first if text might contain PHI</guideline>
          <guideline id="3">Explain which tool you're using and why it's appropriate for the task</guideline>
          <guideline id="4">Present analysis results clearly with appropriate context and limitations</guideline>
          <guideline id="5">Never interpret clinical implications for individual patients</guideline>
          <guideline id="6">Do not make diagnostic or treatment suggestions</guideline>
          <guideline id="7">Refer users to qualified healthcare professionals for clinical questions</guideline>
        <guidlines>
  AgentAliasResource:
    Type: AWS::Bedrock::AgentAlias
    Condition: CreateAgentAliasCondition
    Properties:
      AgentId: !GetAtt Agent.AgentId
      AgentAliasName: !Ref AgentAliasName

  JSLAnalyzeMedicalReportsGuardrail:
    Type: AWS::Bedrock::Guardrail
    Properties:
      BlockedInputMessaging: "Sorry, your query violates our usage policies."
      BlockedOutputsMessaging: "Sorry, I am unable to reply because the output violates our usage policies."
      ContentPolicyConfig:
        FiltersConfig:
          - InputStrength: "HIGH"
            OutputStrength: "HIGH"
            Type: "MISCONDUCT"
          - InputStrength: "HIGH"
            OutputStrength: "NONE"
            Type: "PROMPT_ATTACK"
      Description: Turn on to block profane words and other harmful content.
      Name: JSLAnalyzeMedicalReportsGuardrail
      WordPolicyConfig:
        ManagedWordListsConfig:
          - Type: PROFANITY

Outputs:
  AgentId:
    Description: Agent ID
    Value: !Ref Agent
  AgentAliasId:
    Description: Agent Alias ID
    Value: !GetAtt AgentAliasResource.AgentAliasId
    Condition: CreateAgentAliasCondition
